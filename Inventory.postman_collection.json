{
	"info": {
		"_postman_id": "9b5915cd-62c3-448b-9ab6-02c2831f1064",
		"name": "Inventory",
		"description": "# About this collection\n\nBuild a simplified RESTful API for managing inventory across multiple warehouses.\n\n## **Using the collection**\n\n**Step 1:** Open Auth folder and send login\n\n**Step 2:** Use end-points[](https://postman.postman.co/documentation/24552533-5bead607-0197-4e1d-87d4-3160bc7631c1?entity=&branch=&version=)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13094135"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"token\", pm.response.json().data.token);",
									"",
									"// Validate that the response code should be 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Validate that the response is json object",
									"pm.test(\"Response is a json object\", function () {",
									"    pm.expect(pm.response.json()).to.be.an('object');",
									"});",
									"",
									"// Validate that the response has an arg object",
									"pm.test(\"Response to have 'arg' object\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('args');",
									"});",
									"",
									"// Validate that the response has headers object",
									"pm.test(\"Response to have 'headers' object\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('headers');",
									"});",
									"",
									"// Validate that the response has url property",
									"pm.test(\"Response to have 'url' property\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('url');",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "test@example.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "password",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"login"
							]
						},
						"description": "The tests in this request validate that:\n\n- the response code is 200\n- the response is a JSON object\n- the response has an 'arg' object\n- the response has 'headers' object\n- the response has a 'URL' property"
					},
					"response": []
				}
			]
		},
		{
			"name": "Stock",
			"item": [
				{
					"name": "Transfer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Validate that the response code should be 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Validate that the response is json object",
									"pm.test(\"Response is a json object\", function () {",
									"    pm.expect(pm.response.json()).to.be.an('object');",
									"});",
									"",
									"// Validate that the response has an arg object",
									"pm.test(\"Response to have 'arg' object\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('args');",
									"});",
									"",
									"// Validate that the response has headers object",
									"pm.test(\"Response to have 'headers' object\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('headers');",
									"});",
									"",
									"// Validate that the response has url property",
									"pm.test(\"Response to have 'url' property\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('url');",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "from_warehouse_id",
									"value": "1",
									"description": "Get from Warehouses end-point",
									"type": "text"
								},
								{
									"key": "to_warehouse_id",
									"value": "2",
									"description": "Get from Warehouses end-point",
									"type": "text"
								},
								{
									"key": "product_id",
									"value": "1",
									"description": "Get from Stock end-point",
									"type": "text"
								},
								{
									"key": "quantity",
									"value": "10",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/stock/transfer",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"stock",
								"transfer"
							]
						},
						"description": "The tests in this request validate that:\n\n- the response code is 200\n- the response is a JSON object\n- the response has an 'arg' object\n- the response has 'headers' object\n- the response has a 'URL' property"
					},
					"response": []
				},
				{
					"name": "Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Validate that the response code should be 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Validate that the response is json object",
									"pm.test(\"Response is a json object\", function () {",
									"    pm.expect(pm.response.json()).to.be.an('object');",
									"});",
									"",
									"// Validate that the response has an arg object",
									"pm.test(\"Response to have 'arg' object\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('args');",
									"});",
									"",
									"// Validate that the response has headers object",
									"pm.test(\"Response to have 'headers' object\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('headers');",
									"});",
									"",
									"// Validate that the response has url property",
									"pm.test(\"Response to have 'url' property\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('url');",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "warehouse_id",
									"value": "1",
									"description": "Get from Warehouses end-point",
									"type": "text"
								},
								{
									"key": "product_id",
									"value": "1",
									"description": "Get from Stock end-point",
									"type": "text"
								},
								{
									"key": "quantity",
									"value": "3049",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/stock/order",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"stock",
								"order"
							]
						},
						"description": "The tests in this request validate that:\n\n- the response code is 200\n- the response is a JSON object\n- the response has an 'arg' object\n- the response has 'headers' object\n- the response has a 'URL' property"
					},
					"response": []
				},
				{
					"name": "Refill",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Validate that the response code should be 200",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Validate that the response is json object",
									"pm.test(\"Response is a json object\", function () {",
									"    pm.expect(pm.response.json()).to.be.an('object');",
									"});",
									"",
									"// Validate that the response has an arg object",
									"pm.test(\"Response to have 'arg' object\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('args');",
									"});",
									"",
									"// Validate that the response has headers object",
									"pm.test(\"Response to have 'headers' object\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('headers');",
									"});",
									"",
									"// Validate that the response has url property",
									"pm.test(\"Response to have 'url' property\", function () {",
									"    pm.expect(pm.response.json()).to.have.property('url');",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "warehouse_id",
									"value": "1",
									"description": "Get from Warehouses end-point",
									"type": "text"
								},
								{
									"key": "product_id",
									"value": "1",
									"description": "Get from Stock end-point",
									"type": "text"
								},
								{
									"key": "quantity",
									"value": "10",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/stock/refill",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"stock",
								"refill"
							]
						},
						"description": "The tests in this request validate that:\n\n- the response code is 200\n- the response is a JSON object\n- the response has an 'arg' object\n- the response has 'headers' object\n- the response has a 'URL' property"
					},
					"response": []
				}
			]
		},
		{
			"name": "Warehouses",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Validate that the response code should be 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Validate that the response is json object",
							"pm.test(\"Response is a json object\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('object');",
							"});",
							"",
							"// Validate that the response has an arg object",
							"pm.test(\"Response to have 'arg' object\", function () {",
							"    pm.expect(pm.response.json()).to.have.property('args');",
							"});",
							"",
							"// Validate that the response has headers object",
							"pm.test(\"Response to have 'headers' object\", function () {",
							"    pm.expect(pm.response.json()).to.have.property('headers');",
							"});",
							"",
							"// Validate that the response has url property",
							"pm.test(\"Response to have 'url' property\", function () {",
							"    pm.expect(pm.response.json()).to.have.property('url');",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/warehouses",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"warehouses"
					]
				},
				"description": "The tests in this request validate that:\n\n- the response code is 200\n- the response is a JSON object\n- the response has an 'arg' object\n- the response has 'headers' object\n- the response has a 'URL' property"
			},
			"response": []
		},
		{
			"name": "Stock",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Validate that the response code should be 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Validate that the response is json object",
							"pm.test(\"Response is a json object\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('object');",
							"});",
							"",
							"// Validate that the response has an arg object",
							"pm.test(\"Response to have 'arg' object\", function () {",
							"    pm.expect(pm.response.json()).to.have.property('args');",
							"});",
							"",
							"// Validate that the response has headers object",
							"pm.test(\"Response to have 'headers' object\", function () {",
							"    pm.expect(pm.response.json()).to.have.property('headers');",
							"});",
							"",
							"// Validate that the response has url property",
							"pm.test(\"Response to have 'url' property\", function () {",
							"    pm.expect(pm.response.json()).to.have.property('url');",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/warehouses/1/stock",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"warehouses",
						"1",
						"stock"
					],
					"query": [
						{
							"key": "warehouse_id",
							"value": "1",
							"disabled": true
						}
					]
				},
				"description": "The tests in this request validate that:\n\n- the response code is 200\n- the response is a JSON object\n- the response has an 'arg' object\n- the response has 'headers' object\n- the response has a 'URL' property"
			},
			"response": []
		},
		{
			"name": "Stock Log",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Validate that the response code should be 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Validate that the response is json object",
							"pm.test(\"Response is a json object\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('object');",
							"});",
							"",
							"// Validate that the response has an arg object",
							"pm.test(\"Response to have 'arg' object\", function () {",
							"    pm.expect(pm.response.json()).to.have.property('args');",
							"});",
							"",
							"// Validate that the response has headers object",
							"pm.test(\"Response to have 'headers' object\", function () {",
							"    pm.expect(pm.response.json()).to.have.property('headers');",
							"});",
							"",
							"// Validate that the response has url property",
							"pm.test(\"Response to have 'url' property\", function () {",
							"    pm.expect(pm.response.json()).to.have.property('url');",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/stock-log",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"stock-log"
					],
					"query": [
						{
							"key": "warehouse_id",
							"value": "1",
							"disabled": true
						}
					]
				},
				"description": "The tests in this request validate that:\n\n- the response code is 200\n- the response is a JSON object\n- the response has an 'arg' object\n- the response has 'headers' object\n- the response has a 'URL' property"
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://postman-echo.com"
		}
	]
}